app:

from flask import Flask, render_template, request, redirect, url_for, session, flash
from functools import wraps
import sqlite3

app = Flask(__name__)
app.secret_key = 'sua_chave_secreta'  # Substitua por uma chave secreta segura

class BancoDeDados:
    def __init__(self, nome_banco='restaurante4.db'):
        self.conn = sqlite3.connect(nome_banco, check_same_thread=False)
        self.cursor = self.conn.cursor()

    def criar_banco_de_dados(self):
        # Criação da tabela de restaurantes
        self.cursor.execute('''
        CREATE TABLE IF NOT EXISTS restaurantes (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            email TEXT NOT NULL UNIQUE,
            senha TEXT NOT NULL
        )
        ''')
        self.conn.commit()

    def buscar_usuario(self, email, senha):
        # Busca o usuário pelo email e senha
        self.cursor.execute("SELECT * FROM restaurantes WHERE email = ? AND senha = ?", (email, senha))
        return self.cursor.fetchone()

    def inserir_usuario(self, email, senha):
        # Insere um novo usuário no banco de dados
        try:
            self.cursor.execute("INSERT INTO restaurantes (email, senha) VALUES (?, ?)", (email, senha))
            self.conn.commit()
            return True
        except sqlite3.IntegrityError:
            return False  # Retorna falso se o email já estiver cadastrado

# Instância do banco de dados e criação da tabela
db = BancoDeDados()
db.criar_banco_de_dados()

# Rota para a página inicial, que redireciona para o login
@app.route('/')
def home():
    return redirect(url_for('login'))

# Função para proteger rotas e verificar se o usuário está autenticado
def login_required(f):
    @wraps(f)
    def decorated_function(*args, **kwargs):
        if 'user' not in session:
            return redirect(url_for('login'))
        return f(*args, **kwargs)
    return decorated_function

# Rota para exibir a página de login
@app.route('/login', methods=['GET', 'POST'])
def login():
    if request.method == 'POST':
        email = request.form['email']
        password = request.form['password']

        # Verificação de credenciais no banco de dados
        usuario = db.buscar_usuario(email, password)
        if usuario:
            session['user'] = email  # Autentica o usuário
            return redirect(url_for('dashboard'))
        else:
            flash('Usuário não encontrado. Por favor, cadastre-se.', 'error')
            return redirect(url_for('cadastro'))

    return render_template('login.html')

# Rota para exibir o formulário de cadastro e processar o cadastro
@app.route('/cadastro', methods=['GET', 'POST'])
def cadastro():
    if request.method == 'POST':
        email = request.form['email']
        password = request.form['password']

        # Tenta inserir o novo usuário no banco de dados
        if db.inserir_usuario(email, password):
            flash('Cadastro realizado com sucesso! Faça login para acessar o sistema.', 'success')
            return redirect(url_for('login'))
        else:
            flash('O email já está em uso. Tente outro.', 'error')
            return render_template('cadastro.html', error="O email já está em uso.")

    return render_template('cadastro.html')

# Rota protegida (somente acessível para usuários autenticados)
@app.route('/dashboard')
@login_required
def dashboard():
    return f"Bem-vindo, {session['user']}! Esta é a área restrita."

# Rota para fazer logout
@app.route('/logout')
def logout():
    session.pop('user', None)
    return redirect(url_for('login'))

if __name__ == '__main__':
    app.run(debug=True)



login.html:

<!DOCTYPE html>
<html lang="pt">
<head>
    <meta charset="UTF-8">
    <title>Login</title>
</head>
<body>
    <h2>Login</h2>
    {% if error %}
        <p style="color: red;">{{ error }}</p>
    {% endif %}
    <form action="/login" method="post">
        <label for="email">Email:</label>
        <input type="email" id="email" name="email" required>
        <br>
        <label for="password">Senha:</label>
        <input type="password" id="password" name="password" required>
        <br>
        <button type="submit">Entrar</button>
    </form>
</body>
</html>
